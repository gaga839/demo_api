<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wocai.jrt.orders.dao.PaySerialDao">
	<resultMap id="paySerialResultMap" type="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 结果集映射，不含Blob字段。 MyBatis代码工具自动生成，不要修改！ -->
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
		<result column="investor_id" property="investorId" jdbcType="VARCHAR" />
		<result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
		<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="pay_serial" property="paySerial" jdbcType="VARCHAR" />
		<result column="bank_deposit" property="bankDeposit" jdbcType="VARCHAR" />
		<result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
		<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
		<result column="org_id" property="orgId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - 该表所有字段。 MyBatis代码工具自动生成，不要修改！ -->
		id, order_id, pay_amount, investor_id, employee_id, pay_time, state,
		pay_serial,
		bank_deposit, bank_account, bank_name, org_id
	</sql>
	<sql id="Example_Where_Clause">
		<!-- WARNING - Criteria条件查询的where语句。 MyBatis代码工具自动生成，不要修改！ -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		<if test="start != null">
			limit ${start}, ${pageSize}
		</if>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - Criteria条件查询的where语句。 MyBatis代码工具自动生成，不要修改！ -->
		<where>
			<foreach collection="params.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="model_where_clause">
		<!-- WARNING - 根据model条件，查询或更新的where语句。 MyBatis代码工具自动生成，不要修改！ -->
		<where>
			<trim prefixOverrides="and">
				<if test="orderId != null">
					and order_id = #{orderId,jdbcType=VARCHAR}
				</if>
				<if test="payAmount != null">
					and pay_amount = #{payAmount,jdbcType=DECIMAL}
				</if>
				<if test="investorId != null">
					and investor_id = #{investorId,jdbcType=VARCHAR}
				</if>
				<if test="employeeId != null">
					and employee_id = #{employeeId,jdbcType=VARCHAR}
				</if>
				<if test="payTime != null">
					and pay_time = #{payTime,jdbcType=TIMESTAMP}
				</if>
				<if test="state != null">
					and state = #{state,jdbcType=INTEGER}
				</if>
				<if test="paySerial != null">
					and pay_serial = #{paySerial,jdbcType=VARCHAR}
				</if>
				<if test="bankDeposit != null">
					and bank_deposit = #{bankDeposit,jdbcType=VARCHAR}
				</if>
				<if test="bankAccount != null">
					and bank_account = #{bankAccount,jdbcType=VARCHAR}
				</if>
				<if test="bankName != null">
					and bank_name = #{bankName,jdbcType=VARCHAR}
				</if>
				<if test="orgId != null">
					and org_id = #{orgId,jdbcType=VARCHAR}
				</if>
			</trim>
		</where>
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		<if test="start != null">
			limit ${start}, ${pageSize}
		</if>
	</sql>
	<sql id="update_model_where_clause">
		<!-- WARNING - 根据model条件，更新的where语句。 MyBatis代码工具自动生成，不要修改！ -->
		<where>
			<trim prefixOverrides="and">
				<if test="params.orderId != null">
					and order_id = #{params.orderId,jdbcType=VARCHAR}
				</if>
				<if test="params.payAmount != null">
					and pay_amount = #{params.payAmount,jdbcType=DECIMAL}
				</if>
				<if test="params.investorId != null">
					and investor_id = #{params.investorId,jdbcType=VARCHAR}
				</if>
				<if test="params.employeeId != null">
					and employee_id = #{params.employeeId,jdbcType=VARCHAR}
				</if>
				<if test="params.payTime != null">
					and pay_time = #{params.payTime,jdbcType=TIMESTAMP}
				</if>
				<if test="params.state != null">
					and state = #{params.state,jdbcType=INTEGER}
				</if>
				<if test="params.paySerial != null">
					and pay_serial = #{params.paySerial,jdbcType=VARCHAR}
				</if>
				<if test="params.bankDeposit != null">
					and bank_deposit =
					#{params.bankDeposit,jdbcType=VARCHAR}
				</if>
				<if test="params.bankAccount != null">
					and bank_account =
					#{params.bankAccount,jdbcType=VARCHAR}
				</if>
				<if test="params.bankName != null">
					and bank_name = #{params.bankName,jdbcType=VARCHAR}
				</if>
				<if test="params.orgId != null">
					and org_id = #{params.orgId,jdbcType=VARCHAR}
				</if>
			</trim>
		</where>
	</sql>
	<select id="queryForList" resultMap="paySerialResultMap"
		parameterType="com.wocai.jrt.orders.model.PaySerialBean">
		<!-- WARNING - 根据Criteria所携带条件查询数据，不含Blob字段。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pay_serial
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="queryList" resultMap="paySerialResultMap"
		parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 根据params所携带条件查询数据。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pay_serial
		<if test="_parameter != null">
			<include refid="model_where_clause" />
		</if>
	</select>
	<select id="pagedForList" resultMap="paySerialResultMap"
		parameterType="com.wocai.jrt.orders.model.PaySerialBean">
		<!-- WARNING - 根据Criteria所携带条件分页查询数据。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pay_serial
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="pagedList" resultMap="paySerialResultMap"
		parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 根据params所携带条件分页查询数据。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pay_serial
		<if test="_parameter != null">
			<include refid="model_where_clause" />
		</if>
	</select>
	<select id="get" resultMap="paySerialResultMap" parameterType="java.lang.String">
		<!-- WARNING - 根据主键查询数据。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<include refid="Base_Column_List" />
		from pay_serial
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<select id="unique" resultMap="paySerialResultMap"
		parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 根据params所携带条件查询唯一记录。 MyBatis代码工具自动生成，不要修改！ -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pay_serial
		<if test="_parameter != null">
			<include refid="model_where_clause" />
		</if>
	</select>
	<delete id="deleteById" parameterType="java.lang.String">
		<!-- WARNING - 根据主键删除记录。 MyBatis代码工具自动生成，不要修改！ -->
		delete from pay_serial
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="com.wocai.jrt.orders.model.PaySerialBean">
		<!-- WARNING - 根据Criteria所携带条件删除记录。 MyBatis代码工具自动生成，不要修改！ -->
		delete from pay_serial
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<delete id="deleteBulks" parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 根据params所携带条件删除数据。 MyBatis代码工具自动生成，不要修改！ -->
		delete from pay_serial
		<if test="_parameter != null">
			<include refid="model_where_clause" />
		</if>
	</delete>
	<insert id="save" parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 插入记录，只有非空字段才会插入到数据库。 MyBatis代码工具自动生成，不要修改！ -->
		insert into pay_serial
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="payAmount != null">
				pay_amount,
			</if>
			<if test="investorId != null">
				investor_id,
			</if>
			<if test="employeeId != null">
				employee_id,
			</if>
			<if test="payTime != null">
				pay_time,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="paySerial != null">
				pay_serial,
			</if>
			<if test="bankDeposit != null">
				bank_deposit,
			</if>
			<if test="bankAccount != null">
				bank_account,
			</if>
			<if test="bankName != null">
				bank_name,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=VARCHAR},
			</if>
			<if test="payAmount != null">
				#{payAmount,jdbcType=DECIMAL},
			</if>
			<if test="investorId != null">
				#{investorId,jdbcType=VARCHAR},
			</if>
			<if test="employeeId != null">
				#{employeeId,jdbcType=VARCHAR},
			</if>
			<if test="payTime != null">
				#{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="paySerial != null">
				#{paySerial,jdbcType=VARCHAR},
			</if>
			<if test="bankDeposit != null">
				#{bankDeposit,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				#{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				#{bankName,jdbcType=VARCHAR},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="count" parameterType="com.wocai.jrt.orders.model.PaySerialBean"
		resultType="java.lang.Integer">
		<!-- WARNING - 根据Criteria所携带条件进行count计数。 MyBatis代码工具自动生成，不要修改！ -->
		select count(*) from pay_serial
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="countBy" parameterType="com.wocai.jrt.orders.model.PaySerial"
		resultType="java.lang.Integer">
		<!-- WARNING - 根据params所携带条件计数。 MyBatis代码工具自动生成，不要修改！ -->
		select count(*) from pay_serial
		<if test="_parameter != null">
			<include refid="model_where_clause" />
		</if>
	</select>
	<update id="updateBatch" parameterType="map">
		<!-- WARNING - 根据Criteria所携带条件更新指定字段。 MyBatis代码工具自动生成，不要修改！ -->
		update pay_serial
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=VARCHAR},
			</if>
			<if test="record.payAmount != null">
				pay_amount = #{record.payAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.investorId != null">
				investor_id = #{record.investorId,jdbcType=VARCHAR},
			</if>
			<if test="record.employeeId != null">
				employee_id = #{record.employeeId,jdbcType=VARCHAR},
			</if>
			<if test="record.payTime != null">
				pay_time = #{record.payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.paySerial != null">
				pay_serial = #{record.paySerial,jdbcType=VARCHAR},
			</if>
			<if test="record.bankDeposit != null">
				bank_deposit = #{record.bankDeposit,jdbcType=VARCHAR},
			</if>
			<if test="record.bankAccount != null">
				bank_account = #{record.bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="record.bankName != null">
				bank_name = #{record.bankName,jdbcType=VARCHAR},
			</if>
			<if test="record.orgId != null">
				org_id = #{record.orgId,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateBulks" parameterType="map">
		<!-- WARNING - 根据params所携带条件更新指定字段。 MyBatis代码工具自动生成，不要修改！ -->
		update pay_serial
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=VARCHAR},
			</if>
			<if test="record.payAmount != null">
				pay_amount = #{record.payAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.investorId != null">
				investor_id = #{record.investorId,jdbcType=VARCHAR},
			</if>
			<if test="record.employeeId != null">
				employee_id = #{record.employeeId,jdbcType=VARCHAR},
			</if>
			<if test="record.payTime != null">
				pay_time = #{record.payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.paySerial != null">
				pay_serial = #{record.paySerial,jdbcType=VARCHAR},
			</if>
			<if test="record.bankDeposit != null">
				bank_deposit = #{record.bankDeposit,jdbcType=VARCHAR},
			</if>
			<if test="record.bankAccount != null">
				bank_account = #{record.bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="record.bankName != null">
				bank_name = #{record.bankName,jdbcType=VARCHAR},
			</if>
			<if test="record.orgId != null">
				org_id = #{record.orgId,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="update_model_where_clause" />
		</if>
	</update>
	<update id="updateById" parameterType="com.wocai.jrt.orders.model.PaySerial">
		<!-- WARNING - 根据主键更新指定字段的数据。 MyBatis代码工具自动生成，不要修改！ -->
		update pay_serial
		<set>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=VARCHAR},
			</if>
			<if test="payAmount != null">
				pay_amount = #{payAmount,jdbcType=DECIMAL},
			</if>
			<if test="investorId != null">
				investor_id = #{investorId,jdbcType=VARCHAR},
			</if>
			<if test="employeeId != null">
				employee_id = #{employeeId,jdbcType=VARCHAR},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="paySerial != null">
				pay_serial = #{paySerial,jdbcType=VARCHAR},
			</if>
			<if test="bankDeposit != null">
				bank_deposit = #{bankDeposit,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				bank_account = #{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				bank_name = #{bankName,jdbcType=VARCHAR},
			</if>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="getOrdersNumber" resultType="java.lang.Integer">
		SELECT
		Count(DISTINCT
		pay_serial.order_id)AS ordersNumber
		FROM
		pay_serial
		WHERE
		pay_serial.employee_id = #{employeeId,jdbcType=VARCHAR}
		and pay_time
		BETWEEN #{beginDate} and #{endDate}
	</select>
	<select id="getOrdersAmount" resultType="java.lang.Double">
		SELECT
		Sum(pay_serial.pay_amount)
		FROM
		pay_serial
		WHERE
		pay_serial.employee_id =
		#{employeeId,jdbcType=VARCHAR} AND
		pay_serial.pay_time BETWEEN
		#{beginDate} and #{endDate}
	</select>
	<select id="getOrdersMost" resultType="java.lang.Double">
		SELECT
		max(a.amount)
		FROM
		(
		SELECT
		SUM(b.pay_amount) AS
		amount
		FROM
		pay_serial b
		WHERE
		b.employee_id =
		#{employeeId,jdbcType=VARCHAR}
		AND b.pay_time BETWEEN #{beginDate} and
		#{endDate}
		GROUP BY
		b.order_id
		) a
	</select>
	<resultMap id="employeeGroupAmountMap"
		type="com.wocai.jrt.orders.bean.EmployeeGroupAmountBean">
		<id column="employee_id" property="employeeId" jdbcType="VARCHAR" />
		<result column="employee_group_amount" property="employeeGroupAmount"
			jdbcType="DECIMAL" />
	</resultMap>
	<select id="queryEmployeeGroupAmountList" resultMap="employeeGroupAmountMap">
		SELECT
		SUM(d.pay_amount) as employee_group_amount,
		d.employee_id as
		employee_id
		FROM
		pay_serial d
		WHERE
		d.employee_id IN (
		SELECT
		a.employee_id
		FROM
		group_member AS a
		WHERE
		a.group_id = (
		SELECT
		b.group_id
		FROM
		group_member b
		WHERE
		b.employee_id = #{employeeId,jdbcType=VARCHAR}
		)
		)
		AND d.pay_time BETWEEN #{beginDate} and
		#{endDate}
		GROUP BY
		d.employee_id
	</select>
</mapper>